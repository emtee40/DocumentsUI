{
  "comments": [
    {
      "key": {
        "uuid": "c824d12b_399223df",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1086769
      },
      "writtenOn": "2018-01-26T18:31:47Z",
      "side": 1,
      "message": "This is fine (it\u0027s actually best practice in my opinion), but are you confident that all calling code has non-null values? Or are you at least comfortable with the fact that we might just be exposing errors further up the call stack?",
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3913789_288c5820",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1233205
      },
      "writtenOn": "2018-01-26T23:10:43Z",
      "side": 1,
      "message": "Thank you for the good comment.\nI was worried about that. I\u0027m not 100% confident whether all calling code has non-null value, moreover no guarantee in the future. Do you mind if I change to null-check (if authority \u003d\u003d null, then return null) here?",
      "parentUuid": "c824d12b_399223df",
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f109bd09_b3d8e4da",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1086769
      },
      "writtenOn": "2018-01-27T00:13:35Z",
      "side": 1,
      "message": "I think there are two sides to the coin. On one side the callers aren\u0027t necessarily null checking values before calling this method. On the other side the callers aren\u0027t necessarily checking if the return value is null.\n\nIt\u0027s up to you how you\u0027d like to proceed with that, but from my perspective this change hardens the contract of this class, and that\u0027s a good starting point.\n\nIf you really want to button this up, then you\u0027re probably going to have to chase down all the callers and guard one or both of those cases.",
      "parentUuid": "e3913789_288c5820",
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "048e1a2c_319009d6",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1233205
      },
      "writtenOn": "2018-01-27T00:40:16Z",
      "side": 1,
      "message": "OK, I agree. There\u0027s no obvious concern on hardening the check here now, as it should have been causing the error anyway in internal method of this class even until now if null authority is given.\nIt\u0027s fine to me to be able to avoid the crash by the invalid provider (that can be caused by the external factor of DocumentsUI) that is now guarded by line 471 check.",
      "parentUuid": "f109bd09_b3d8e4da",
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "277d3261_9136306a",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1233205
      },
      "writtenOn": "2018-01-30T00:47:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "048e1a2c_319009d6",
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03cc81b5_8afc6bbf",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 336,
      "author": {
        "id": 1233205
      },
      "writtenOn": "2018-01-30T09:23:17Z",
      "side": 1,
      "message": "Steve-san,\nSorry for changing my mind but I would like to remove the check here. There\u0027s a fake root info for \"Recent\" managed in mRoots. The authority and rootId of \"Recent\" root is null (line#109) and it\u0027s added to mRoots (line#462, 485). I could not find the actual use-case, but if caller of this method pass authority\u003dnull, I think the root info for \"Recent\" should be hit in getRootLocked (line#343) and to be returned to the caller because the \"Recent\" root info is managed in mRoots as well as other real authorities/roots.",
      "parentUuid": "277d3261_9136306a",
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c98face_392ed7eb",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 341,
      "author": {
        "id": 1233205
      },
      "writtenOn": "2018-01-26T23:10:43Z",
      "side": 1,
      "message": "Same as above, as this also called from out of this class.",
      "range": {
        "startLine": 341,
        "startChar": 8,
        "endLine": 341,
        "endChar": 21
      },
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4e32dc6_7d746bad",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 341,
      "author": {
        "id": 1086769
      },
      "writtenOn": "2018-01-27T00:13:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9c98face_392ed7eb",
      "range": {
        "startLine": 341,
        "startChar": 8,
        "endLine": 341,
        "endChar": 21
      },
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a3b7f34_1afdf60e",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 341,
      "author": {
        "id": 1233205
      },
      "writtenOn": "2018-01-27T00:40:16Z",
      "side": 1,
      "message": "Same as above.",
      "parentUuid": "d4e32dc6_7d746bad",
      "range": {
        "startLine": 341,
        "startChar": 8,
        "endLine": 341,
        "endChar": 21
      },
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08552756_7c5db209",
        "filename": "src/com/android/documentsui/roots/ProvidersCache.java",
        "patchSetId": 4
      },
      "lineNbr": 341,
      "author": {
        "id": 1233205
      },
      "writtenOn": "2018-01-30T00:47:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6a3b7f34_1afdf60e",
      "range": {
        "startLine": 341,
        "startChar": 8,
        "endLine": 341,
        "endChar": 21
      },
      "revId": "70251fa055dd80bfae20c56ffa17919fcd2b6791",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}